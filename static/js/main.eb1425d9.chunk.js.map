{"version":3,"sources":["../../src/components/Highliter.tsx","../../src/components/CodeEditor.tsx","../../src/components/CopyToClipboard.tsx","../../src/index.tsx","App.tsx","index.js"],"names":["Highliter","ref","createRef","componentDidMount","componentDidUpdate","highlightCode","Prism","render","this","props","code","lineNumbers","language","fontSize","className","style","margin","boxSizing","background","whiteSpace","wordWrap","paddingTop","paddingRight","paddingBottom","lineHeight","position","top","left","maxWidth","minWidth","border","fontWeight","textAlign","wordSpacing","wordBreak","overflowWrap","tabSize","hyphens","cursor","resize","overflowY","fontFamily","Component","CodeEditor","onChange","onCodeChange","value","e","getTextareaHeight","height","scrollHeight","offsetHeight","onKeyDown","readOnly","selectionStart","selectionEnd","beforeStart","indexOfTab","indexOfNewLine","updateTextareaHeight","paddingLeft","React","setState","state","display","minHeight","width","spellCheck","textareaRef","padding","color","outline","placeholder","CopyToClipboard","onCopy","copy","copied","setTimeout","title","onClick","right","borderRadius","boxShadow","disabled","viewBox","d","index","pointerEvents","App","console","log","src","alt","href","ReactDOM","document","getElementById"],"mappings":"o4BAUqBA,cAArB,a,8CAEUC,IAAqCC,EAArC,YAER,EAAAC,kBAAoB,kBAAM,EAAN,iBAEpB,EAAAC,mBAAqB,kBAAM,EAAN,iBAErB,EAAAC,cAAgB,kBAAO,OAAY,MAAb,SAAkCC,mBAAuB,MAA/D,U,4BAEhBC,kB,MACyDC,KAAKC,MAApDC,SAAMC,gBAAaC,a,IAAUC,oBAAWA,EAAA,KAEhD,OACE,uBAAKC,UAAWH,EAAc,eAAiB,GAC3CI,MAAO,CACLF,SADK,EAELG,OAFK,IAGLC,UAHK,aAILC,WAJK,cAKLC,WALK,WAMLC,SANK,SAOLC,WAPK,MAQLC,aARK,MASLC,cATK,MAULC,WAVK,MAWLC,SAXK,WAYLC,IAZK,MAaLC,KAbK,MAcLC,SAdK,OAeLC,SAfK,OAgBLC,OAhBK,OAiBLC,WAjBK,SAkBLC,UAlBK,OAmBLC,YAnBK,SAoBLC,UApBK,aAqBLC,aArBK,SAsBLC,QAtBK,IAuBLC,QAvBK,OAwBLC,OAxBK,OAyBLC,OAzBK,OA0BLC,UAAW,WAEf,wBAAMvC,IAAKO,KAAKP,IAAKc,MAAO,CACxBI,WADwB,WAExBC,SAFwB,SAGxBe,aAHwB,SAIxBM,WAJwB,yEAKxBV,WAAY,UACZjB,UAAS,YAAcF,GApC/B,K,EAbiBZ,CAAkB0C,aCMlBC,cAInB,c,OACE,wBAWFC,SAAW,Y,IACDC,EAAiB,EAAKpC,MAAtBoC,aACJC,EAAQC,SAAZ,MACA,WAAc,CAAErC,KAAMoC,IACtBD,MAeF,EAAAG,kBAAoB,WAClB,IAAIC,EAAJ,EACA,GAAI,cAAJ,QAA8B,OACW,cADX,QACpBC,EADoB,eACNC,EADM,eAE5BF,EAASC,MAATD,EAEF,UAGF,EAAAG,UAAY,Y,MACyB,EAAK3C,MAAhC4C,aAAUR,iBAClB,KACEE,wBACK,WAAIA,MAAiB,CAC1BA,mBACA,IAAMD,EAAQ,sBAAd,MACMQ,EAAiB,sBAAvB,eACMC,EAAe,sBAArB,aAEA,GAAKR,EAAL,SAOO,CACL,IAAMS,EAAcV,0CAApB,IACMW,EAAaD,UAAnB,MACME,EAAiBF,UAAvB,MACM9C,EAAO8C,YAAsBC,EAAtBD,gCAAqEA,0CAArEA,IAAyIV,YAAtJ,IACIW,QAAsBA,MAA1B,IAAyDC,KACvD,WAAc,CAAEhD,SAAQ,WACtB,qCAA2C6C,KAAoBA,EAA/D,GACA,mCAAyCA,KAAoBA,EAA7D,MAEFV,UAjBa,CACf,IAAMnC,EAAOoC,sBAA4CA,YAAzD,GACA,WAAc,CAAEpC,SAAQ,WACtB,qCAA2C6C,KAAoBA,EAA/D,GACA,mCAAyCA,KAAoBA,EAA7D,MAEFV,QAiBN,EAAAc,qBAAuB,kBAAW,WAAc,CAAEV,OAAM,QAAW,WAAQ,WAAc,CAAEA,OAAY,EAAN,+B,IAvEvFvC,EAAS,EAAKD,MAAdC,K,OACR,QAAa,CACXuC,OADW,OAEXW,YAFW,MAGXlD,QAGF,cAAmBmD,EAAnB,Y,oCAUF1D,6BACEK,KAAA,uBACwBA,KAAKC,MAArBE,aACSH,KAAKsD,SAAS,CAACF,YAAa,W,EAG/CxD,+BACMI,KAAKC,QAAT,GACED,KAAA,wB,EAgDJD,kB,IACUM,EAAaL,KAAKC,MAAlBI,S,EAC8BL,KAAKuD,MAAnCd,WAAQW,gBAAalD,SAC7B,OAAQ,gBAACmD,EAAD,cAEN,uBACE/C,UAAW,oBACXC,MAAO,CAAEiD,QAAF,QAAoBC,UAApB,EAAuChB,OAAvC,OAAuDiB,MAAvD,OAAsEzC,SAAtE,WAA4FT,OAA5F,IAAyGC,UAAW,gBAE7H,4BACEkD,YAAY,EACZrB,MAAOpC,EACP0C,UAAW5C,KAAK4C,UAChBR,SAAUpC,KAAKoC,SACf3C,IAAKO,KAAK4D,YACVrD,MAAO,CAAEkC,OAAF,EACLpC,SADK,EAELY,SAFK,WAGLC,IAHK,MAILC,KAJK,MAKLC,SALK,OAMLC,SANK,OAOLwC,QAAS,gBAPJ,EAQLpD,UARK,aASLa,OATK,OAULwC,MAVK,UAWLpD,WAXK,cAYLuB,WAZK,yEAaLV,WAbK,SAcLC,UAdK,OAeLC,YAfK,SAgBLC,UAhBK,aAiBLd,SAjBK,SAkBLe,aAlBK,SAmBLX,WAnBK,MAoBLY,QApBK,IAqBLC,QArBK,OAsBLC,OAtBK,OAuBLnB,WAvBK,WAwBLoB,OAxBK,OAyBLC,UAzBK,SA0BL+B,QAAS,QACXC,YAAY,sB,EAzHC7B,CAAmBD,aCLnB+B,cAEnB,c,aACE,wBAMFC,OAAS,YACPC,KAEA,WAAc,CAACC,QAAQ,IAAO,WAC5BC,YAAW,WAAQ,WAAc,CAACD,QAAQ,MAA1CC,UATF,QAAa,CACXD,QAAQ,G,4BAYZrE,kB,WACUG,EAASF,KAAKC,MAAdC,KACAkE,EAAWpE,KAAKuD,MAAhBa,OACR,OACE,0BACEE,MAAM,oBACNC,QAAS,kBAAM,SAAN,IACThE,MAAO,CACLU,SADK,WAELC,IAFK,MAGLsD,MAHK,OAILd,MAJK,OAKLjB,OALK,OAMLoB,QANK,UAOLnD,WAPK,UAQLY,OARK,OASLmD,aATK,MAULC,UAVK,yBAWL5C,OAXK,UAYLiC,QAAS,QAEXY,SAAUP,GAERA,EACA,uBAAK3B,OAAO,OAAOiB,MAAM,OAAOkB,QAAQ,eACtC,wBAAMC,EAAE,6pEAA4pE,wBAAMA,EAAE,sjBAG9qE,uBAAKpC,OAAO,OAAOiB,MAAM,OAAOkB,QAAQ,aACtC,wBAAMC,EAAE,sLACR,wBAAMA,EAAE,6LACR,wBAAMA,EAAE,0FACR,wBAAMA,EAAE,gMACR,wBAAMA,EAAE,6SACR,wBAAMA,EAAE,sFACR,wBAAMA,EAAE,qFACR,wBAAMA,EAAE,oFACR,wBAAMA,EAAE,wJ,EAtDCZ,CAAwB/B,aCWxB4C,cAEnB,c,OACE,wBAOFzC,aAAe,Y,IACLA,EAAiB,EAAKpC,MAAtBoC,aACR,WAAc,CAAEnC,SAChB,GAAoBmC,M,IATZnC,EAAS,EAAKD,MAAdC,K,OACR,QAAa,CACXA,KAAMA,GAAQ,I,4BAUlBH,kB,IACUG,EAASF,KAAKuD,MAAdrD,K,EACoDF,KAAKC,MAAzDI,aAAUwC,aAAUzC,aAAUD,gBAAagE,SACnD,OAAQ,uBAAK5D,MAAO,CAAEmD,MAAF,OAAkBjB,OAAlB,OAAkCT,UAAlC,OAAqDf,SAAU,aACjF,uBAAKV,MAAO,CAAEU,SAAF,WAAwByC,MAAxB,OAAuCjB,OAAQ,SACzD,mBACEpC,SAAUA,GAAY,GACtBwC,SAAUA,IAAY,EACtB1C,YAAaA,IAAe,EAC5BD,KAAMA,EACNmC,aAAcrC,KAAKqC,gBAGvB,uBAAK9B,MAAO,CAAEU,SAAF,WAAwByC,MAAxB,OAAuCjB,OAAvC,OAAuDsC,cAAe,SAChF,mBACE7E,KAAMA,EACNE,SAAWA,GAAY,KACvBD,YAAaA,IAAe,EAC5BE,SAAUA,GAAY,MAGxB8D,GAAQ,mBAAiBjE,KAAMA,M,EArClB4E,CAAczB,EAAMnB,W,2IChB1B,SAAS8C,IAEtB,IAsBM3C,EAAe,SAACnC,GAAD,OAAiB+E,QAAQC,IAAIhF,IAClD,OACE,yBAAKI,UAAU,aACb,yBAAKA,UAAU,SAAQ,4CACvB,yBAAKA,UAAU,QAAO,yBAAK6E,IAAI,kCAAkC1C,OAAO,QAAQ2C,IAAI,wBACpF,yBAAK9E,UAAU,eACb,2EAEF,yBAAKA,UAAU,SACb,uCACA,yBAAKC,MAAO,CAACmD,MAAO,QAASjB,OAAQ,SACnC,kBAAC,IAAD,CAAQpC,SAAU,GAAID,SAAU,OAAQD,aAAa,EAAQD,KAAI,oBAAuB2C,UAAU,EAAMsB,MAAM,KAEhH,iCACA,yBAAK5D,MAAO,CAACmD,MAAO,QAASjB,OAAQ,SACnC,kBAAC,IAAD,CAAQpC,SAAU,GAAID,SAAU,OAAQD,aAAa,EAAQD,KAAI,uBAA0B2C,UAAU,EAAMsB,MAAM,MAIrH,yBAAK7D,UAAU,SACb,qCACA,iFAEA,6DACA,yBAAKC,MAAO,CAACmD,MAAO,QAASjB,OAAQ,UACnC,kBAAC,IAAD,CAAQpC,SAAU,GAAIgC,aAAcA,EAAcjC,SAAU,MAAOyC,UAAU,EAAM1C,aAAa,EAAMD,KAtC9F,qQAsCgHiE,MAAM,KAGhI,+DACA,yBAAK5D,MAAO,CAACmD,MAAO,QAASjB,OAAQ,UACnC,kBAAC,IAAD,CAAQpC,SAAU,GAAIgC,aAAcA,EAAcjC,SAAU,MAAOyC,UAAU,EAAO1C,aAAa,EAAMD,KApDrG,0NAoDiHiE,MAAM,KAG3H,sCACA,kHAGF,yBAAK7D,UAAU,SACb,+CAEA,yBAAKA,UAAU,QACb,wCACA,uBAAGA,UAAU,eAAb,uCACA,2BAAG,0BAAMA,UAAU,SAAhB,YAAH,IAA2C,0BAAMA,UAAU,UAAhB,mBAG7C,yBAAKA,UAAU,QACb,4CACA,uBAAGA,UAAU,eAAb,0BACA,2BAAG,0BAAMA,UAAU,SAAhB,YAAH,IAA2C,0BAAMA,UAAU,UAAhB,gCAG7C,yBAAKA,UAAU,QACb,wCACA,uBAAGA,UAAU,eAAb,qEACA,2BAAG,0BAAMA,UAAU,SAAhB,YAAH,IAA2C,0BAAMA,UAAU,UAAhB,sCAA4D,uBAAG+E,KAAK,sDAAR,0BAGzG,yBAAK/E,UAAU,QACb,wCACA,uBAAGA,UAAU,eAAb,mCACA,2BAAG,0BAAMA,UAAU,SAAhB,YAAH,IAA2C,0BAAMA,UAAU,UAAhB,QAA3C,OAAmF,0BAAMA,UAAU,UAAhB,WAGrF,yBAAKA,UAAU,QACb,2CACA,uBAAGA,UAAU,eAAb,oDACA,2BAAG,0BAAMA,UAAU,SAAhB,YAAH,IAA2C,0BAAMA,UAAU,UAAhB,QAA3C,OAAmF,0BAAMA,UAAU,UAAhB,WAGrF,yBAAKA,UAAU,QACb,oCACA,uBAAGA,UAAU,eAAb,gEACA,2BAAG,0BAAMA,UAAU,SAAhB,YAAH,IAA2C,0BAAMA,UAAU,UAAhB,QAA3C,OAAmF,0BAAMA,UAAU,UAAhB,WAGrF,yBAAKA,UAAU,QACb,oCACA,uBAAGA,UAAU,eAAb,0CACA,2BAAG,0BAAMA,UAAU,SAAhB,YAAH,IAA2C,0BAAMA,UAAU,UAAhB,aAA3C,OAGJ,yBAAKA,UAAU,UACb,gDACA,6DAAkC,uBAAG+E,KAAK,uDAAR,cAAlC,UAAqH,uBAAGA,KAAK,2CAAR,kBAGvH,yBAAK/E,UAAU,cACb,4CACA,oDAAyB,uBAAG+E,KAAK,+CAAR,SAAzB,gBAAqG,uBAAGA,KAAK,8CAAR,MAArG,OCjHRC,IAASvF,OAAO,kBAACiF,EAAD,MAASO,SAASC,eAAe,U","file":"static/js/main.eb1425d9.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react'\nimport Prism from \"prismjs\"\n\ninterface IProps {\n  code: string,\n  lineNumbers: boolean,\n  language: string,\n  fontSize?: number\n}\n\nexport default class Highliter extends Component<IProps> {\n\n  private ref : React.RefObject<HTMLElement> = createRef() \n\n  componentDidMount = () => this.highlightCode() \n\n  componentDidUpdate = () => this.highlightCode() \n  \n  highlightCode = () => (this.ref && this.ref.current) && Prism.highlightElement(this.ref.current)\n\n  render() {\n    const { code, lineNumbers, language, fontSize = 12 } = this.props\n    \n    return (\n      <pre className={lineNumbers ? \"line-numbers\" : \"\"} \n          style={{ \n            fontSize, \n            margin: \"0\", \n            boxSizing: \"border-box\", \n            background: \"transparent\",\n            whiteSpace: \"pre-wrap\",\n            wordWrap: \"normal\",\n            paddingTop: \"1em\",\n            paddingRight: \"1em\",\n            paddingBottom: \"1em\", \n            lineHeight: \"1.5\",\n            position: \"absolute\", \n            top: \"0px\", \n            left: \"0px\", \n            maxWidth: \"100%\", \n            minWidth: \"100%\", \n            border: \"none\", \n            fontWeight: \"normal\", \n            textAlign: \"left\", \n            wordSpacing: \"normal\", \n            wordBreak: \"break-word\", \n            overflowWrap: \"normal\",  \n            tabSize: \"4\", \n            hyphens: \"none\", \n            cursor: \"auto\", \n            resize: \"none\", \n            overflowY: \"hidden\"}}>\n        \n        <code ref={this.ref} style={{ \n            whiteSpace: \"pre-wrap\",\n            wordWrap: \"normal\",\n            overflowWrap: \"normal\",\n            fontFamily: \"'Fira Code', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n            fontWeight: \"normal\"}}\n            className={`language-${language}`}>\n\n          { code } \n\n        </code>\n\n      </pre>\n    )\n  }\n}","import React, { Component } from 'react'\n\ninterface IProps {\n  readOnly: boolean,\n  lineNumbers: boolean,\n  fontSize: number,\n  code: string,\n  onCodeChange: (code: string) => void \n}\n\ninterface IState { \n  height: string,\n  paddingLeft: string,\n  code: string\n}\n\nexport default class CodeEditor extends Component<IProps, IState> {\n\n  private textareaRef: React.RefObject<HTMLTextAreaElement> \n\n  constructor(props: IProps){\n    super(props)\n    const { code } = this.props\n    this.state = { \n      height: \"100%\",\n      paddingLeft: \"1em\",\n      code\n    }\n\n    this.textareaRef = React.createRef<HTMLTextAreaElement> ()\n  }\n\n  onChange = (e: React.ChangeEvent<HTMLTextAreaElement>):void => {\n    const { onCodeChange } = this.props\n    let value = e.target.value\n    this.setState({ code: value })\n    onCodeChange(value)\n  }\n\n  componentDidMount ():void {\n    this.updateTextareaHeight()\n    const { lineNumbers } = this.props\n    if (lineNumbers) this.setState({paddingLeft: \"3.8em\"})\n  }\n\n  componentDidUpdate (prevProps: IProps):void {\n    if (this.props !== prevProps) {\n      this.updateTextareaHeight()\n    }\n  }\n\n  getTextareaHeight = ():number => {\n    let height:number = 0\n    if (this.textareaRef.current) {\n      const { scrollHeight, offsetHeight } = this.textareaRef.current\n      height = scrollHeight > offsetHeight ? scrollHeight : offsetHeight\n    }\n    return height\n  }\n\n  onKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    const { readOnly, onCodeChange } = this.props\n    if (readOnly) { \n      e.preventDefault() \n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      const value = this.textareaRef.current!.value;\n      const selectionStart = this.textareaRef.current!.selectionStart;\n      const selectionEnd = this.textareaRef.current!.selectionEnd;\n\n      if (!e.shiftKey) {\n        const code = value.substring(0, selectionStart) + '  ' + value.substring(selectionEnd)\n        this.setState({ code }, () => {\n          this.textareaRef.current!.selectionStart = selectionEnd + 2 - (selectionEnd - selectionStart);\n          this.textareaRef.current!.selectionEnd = selectionEnd + 2 - (selectionEnd - selectionStart);\n        })\n        onCodeChange(code)\n      } else {\n        const beforeStart = value.substring(0, selectionStart).split('').reverse().join('')\n        const indexOfTab = beforeStart.indexOf('  ')\n        const indexOfNewLine = beforeStart.indexOf('\\n') \n        const code = beforeStart.substring(indexOfTab + 2).split('').reverse().join('') + beforeStart.substring(0, indexOfTab).split('').reverse().join('') + value.substring(selectionEnd)\n        if (indexOfTab !== -1 && (indexOfTab < indexOfNewLine || indexOfNewLine === -1)) {\n          this.setState({ code }, () => {\n            this.textareaRef.current!.selectionStart = selectionEnd - 2 - (selectionEnd - selectionStart);\n            this.textareaRef.current!.selectionEnd = selectionEnd - 2 - (selectionEnd - selectionStart);\n          })\n          onCodeChange(code)\n        }\n      }\n    }\n  }\n\n  updateTextareaHeight = ():void => this.setState({ height : `0px`}, () => { this.setState({ height : `${this.getTextareaHeight()}px`}) })\n  \n  render() {\n    const { fontSize } = this.props\n    const { height, paddingLeft, code } = this.state\n    return (<React.Fragment>\n      \n      <pre \n        className={\"language-disguise\"} \n        style={{ display: \"block\", minHeight: height, height: \"100%\", width: \"100%\", position: \"absolute\", margin: \"0\", boxSizing: \"border-box\" }}></pre>\n      \n      <textarea \n        spellCheck={false} \n        value={code} \n        onKeyDown={this.onKeyDown} \n        onChange={this.onChange} \n        ref={this.textareaRef} \n        style={{ height: height, \n          fontSize: fontSize, \n          position: \"absolute\", \n          top: \"0px\", \n          left: \"0px\", \n          maxWidth: \"100%\", \n          minWidth: \"100%\", \n          padding: `12px 0em 1em ${paddingLeft}`, \n          boxSizing: \"border-box\", \n          border: \"none\", \n          color: \"#545454\", \n          background: \"transparent\", \n          fontFamily: \"'Fira Code', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\", \n          fontWeight: \"normal\", \n          textAlign: \"left\", \n          wordSpacing: \"normal\", \n          wordBreak: \"break-word\", \n          wordWrap: \"normal\",\n          overflowWrap: \"normal\", \n          lineHeight: \"1.5\", \n          tabSize: \"4\", \n          hyphens: \"none\", \n          cursor: \"auto\", \n          whiteSpace: \"pre-wrap\", \n          resize: \"none\", \n          overflowY: \"hidden\",\n          outline: \"none\" }}  \n        placeholder='Start coding...' ></textarea>\n    \n    </React.Fragment>)\n  }\n}","import React, { Component } from 'react'\nimport copy from 'copy-to-clipboard'\n\ninterface IProps {\n  code: string\n}\n\ninterface IState {\n  copied: boolean\n}\n\nexport default class CopyToClipboard extends Component<IProps, IState> {\n\n  constructor(props:IProps){\n    super(props)\n    this.state = {\n      copied: false\n    }\n  }\n\n  onCopy = (code:string) => {\n    copy(code)\n    \n    this.setState({copied: true}, () => {\n      setTimeout(() => { this.setState({copied: false}) }, 1200)\n    })\n  }\n\n  render() {\n    const { code } = this.props\n    const { copied } = this.state\n    return (\n      <button \n        title=\"copy to clipboard\"\n        onClick={() => this.onCopy(code)}\n        style={{\n          position: \"absolute\",\n          top: \"8px\",\n          right: \"10px\",\n          width: \"24px\",\n          height: \"26px\",\n          padding: \"1px 3px\",\n          background: \"#fafbfc\",\n          border: \"none\",\n          borderRadius: \"2px\",\n          boxShadow: \"0px 0px 5px -1px black\",\n          cursor: \"pointer\",\n          outline: \"none\"\n        }}\n        disabled={copied}\n        >\n        { copied ?\n          <svg height='100%' width='100%' viewBox=\"0 0 496 496\">\n            <path d=\"m494.492188 243.308594-37.25-51.386719 6.601562-63.109375c.359375-3.449219-1.539062-6.734375-4.707031-8.144531l-57.980469-25.800781-25.800781-57.984376c-1.417969-3.160156-4.699219-5.054687-8.144531-4.710937l-63.121094 6.597656-51.382813-37.246093c-2.800781-2.03125-6.589843-2.03125-9.390625 0l-51.386718 37.246093-63.117188-6.597656c-3.441406-.328125-6.710938 1.5625-8.144531 4.703125l-25.800781 57.984375-57.984376 25.808594c-3.164062 1.40625-5.0625 4.691406-4.703124 8.136719l6.597656 63.117187-37.246094 51.386719c-2.03125 2.800781-2.03125 6.589844 0 9.390625l37.246094 51.382812-6.597656 63.121094c-.363282 3.445313 1.535156 6.734375 4.703124 8.144531l57.984376 25.800782 25.800781 57.984374c1.425781 3.148438 4.699219 5.042969 8.144531 4.710938l63.117188-6.601562 51.386718 37.25c2.800782 2.03125 6.589844 2.03125 9.390625 0l51.382813-37.25 63.121094 6.601562c3.445312.347656 6.722656-1.546875 8.144531-4.703125l25.800781-57.984375 57.980469-25.808594c3.164062-1.410156 5.0625-4.691406 4.707031-8.136718l-6.601562-63.121094 37.25-51.382813c2.035156-2.800781 2.035156-6.597656 0-9.398437zm-52 53.863281c-1.160157 1.597656-1.6875 3.566406-1.480469 5.527344l6.304687 60.382812-55.480468 24.699219c-1.8125.796875-3.265626 2.242188-4.066407 4.054688l-24.679687 55.480468-60.398438-6.3125c-1.960937-.203125-3.925781.328125-5.519531 1.488282l-49.160156 35.632812-49.167969-35.632812c-1.363281-.996094-3.003906-1.53125-4.6875-1.527344-.28125 0-.5625 0-.800781.039062l-60.402344 6.3125-24.679687-55.480468c-.804688-1.8125-2.25-3.261719-4.0625-4.066407l-55.511719-24.6875 6.304687-60.382812c.203125-1.960938-.324218-3.929688-1.480468-5.527344l-35.632813-49.167969 35.632813-49.167968c1.15625-1.597657 1.683593-3.566407 1.480468-5.527344l-6.304687-60.386719 55.480469-24.695313c1.8125-.796874 3.261718-2.242187 4.0625-4.054687l24.679687-55.480469 60.402344 6.3125c1.957031.195313 3.921875-.335937 5.519531-1.488281l49.167969-35.632813 49.167969 35.632813c1.59375 1.15625 3.558593 1.683594 5.519531 1.488281l60.398437-6.3125 24.679688 55.480469c.804687 1.8125 2.253906 3.257813 4.066406 4.0625l55.480469 24.6875-6.304688 60.386719c-.207031 1.960937.320313 3.929687 1.480469 5.527344l35.628906 49.167968zm0 0\"/><path d=\"m341.425781 157.308594c-3.125-3.125-8.1875-3.125-11.3125 0l-130.101562 130.101562-39.625-39.550781c-3.121094-3.113281-8.175781-3.113281-11.296875 0l-22.679688 22.542969c-1.503906 1.5-2.351562 3.539062-2.351562 5.664062s.847656 4.164063 2.351562 5.664063l67.921875 67.921875c3.121094 3.121094 8.1875 3.121094 11.3125 0l158.398438-158.402344c3.121093-3.121094 3.121093-8.1875 0-11.3125zm-141.414062 175.382812-56.601563-56.601562 11.3125-11.285156 39.640625 39.558593c3.121094 3.117188 8.179688 3.117188 11.304688 0l130.101562-130.089843 11.328125 11.328124zm0 0\"/>\n          </svg>\n          :\n          <svg height='100%' width='100%' viewBox='0 0 24 24'>\n            <path d='m17.5 24c-3.584 0-6.5-2.916-6.5-6.5s2.916-6.5 6.5-6.5 6.5 2.916 6.5 6.5-2.916 6.5-6.5 6.5zm0-12c-3.032 0-5.5 2.468-5.5 5.5s2.468 5.5 5.5 5.5 5.5-2.468 5.5-5.5-2.468-5.5-5.5-5.5z' />\n            <path d='m17.5 21c-.128 0-.256-.049-.354-.146l-3-3c-.195-.195-.195-.512 0-.707s.512-.195.707 0l2.646 2.646 2.646-2.646c.195-.195.512-.195.707 0s.195.512 0 .707l-3 3c-.096.097-.224.146-.352.146z' />\n            <path d='m17.5 21c-.276 0-.5-.224-.5-.5v-6c0-.276.224-.5.5-.5s.5.224.5.5v6c0 .276-.224.5-.5.5z' />\n            <path d='m9.5 21h-7c-1.379 0-2.5-1.121-2.5-2.5v-13c0-1.379 1.121-2.5 2.5-2.5h2c.276 0 .5.224.5.5s-.224.5-.5.5h-2c-.827 0-1.5.673-1.5 1.5v13c0 .827.673 1.5 1.5 1.5h7c.276 0 .5.224.5.5s-.224.5-.5.5z' />\n            <path d='m11.5 6h-6c-.827 0-1.5-.673-1.5-1.5v-2c0-.276.224-.5.5-.5h1.55c.232-1.14 1.243-2 2.45-2s2.218.86 2.45 2h1.55c.276 0 .5.224.5.5v2c0 .827-.673 1.5-1.5 1.5zm-6.5-3v1.5c0 .275.225.5.5.5h6c.275 0 .5-.225.5-.5v-1.5h-1.5c-.276 0-.5-.224-.5-.5 0-.827-.673-1.5-1.5-1.5s-1.5.673-1.5 1.5c0 .276-.224.5-.5.5z' />\n            <path d='m13.5 9h-10c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h10c.276 0 .5.224.5.5s-.224.5-.5.5z' />\n            <path d='m10.5 12h-7c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h7c.276 0 .5.224.5.5s-.224.5-.5.5z' />\n            <path d='m8.5 15h-5c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h5c.276 0 .5.224.5.5s-.224.5-.5.5z' />\n            <path d='m16.5 9c-.276 0-.5-.224-.5-.5v-3c0-.827-.673-1.5-1.5-1.5h-2c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h2c1.379 0 2.5 1.121 2.5 2.5v3c0 .276-.224.5-.5.5z' />\n          </svg>\n        }\n    </button>\n    )\n  }\n}","import React from 'react'\nimport Highliter from './components/Highliter'\nimport CodeEditor from './components/CodeEditor'\nimport CopyToClipboard from './components/CopyToClipboard'\n\nimport \"prismjs/plugins/line-numbers/prism-line-numbers\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\";\nimport \"prismjs/themes/prism-tomorrow.css\";\n\n\ninterface IProps { \n  onCodeChange?: ( code:string ) => void\n  code?: string\n  fontSize?: number\n  readOnly?: boolean\n  language?: string\n  lineNumbers?: boolean\n  copy?: boolean\n}\n\ninterface IState { code: string }\n\nexport default class index extends React.Component<IProps, IState> {\n  \n  constructor(props: IProps) { \n    super(props)\n    const { code } = this.props\n    this.state = { \n      code: code || ''\n    }\n  }\n\n  onCodeChange = (code: string) => {\n    const { onCodeChange } = this.props\n    this.setState({ code })\n    if ( onCodeChange ) onCodeChange(code)\n  }\n  \n  render() {\n    const { code } = this.state\n    const { fontSize, readOnly, language, lineNumbers, copy } = this.props\n    return (<div style={{ width: \"auto\",  height: \"100%\", overflowY: \"auto\", position: \"relative\"}}>\n      <div style={{ position: \"absolute\", width: \"100%\", height: \"100%\"}}>\n        <CodeEditor \n          fontSize={fontSize || 13 } \n          readOnly={readOnly || false} \n          lineNumbers={lineNumbers || false}\n          code={code} \n          onCodeChange={this.onCodeChange}\n        />\n      </div>\n      <div style={{ position: \"absolute\", width: \"100%\", height: \"100%\", pointerEvents: \"none\" }}>\n        <Highliter \n          code={code}\n          language={ language || 'js'}\n          lineNumbers={lineNumbers || false} \n          fontSize={fontSize || 13} \n        />\n      </div>\n      { copy && <CopyToClipboard code={code} /> }\n    </div>)\n  }\n}","import React from 'react'\nimport Editor from 'react-coder'\n\nimport \"./index.css\"\nimport \"./prism-nord.css\"\n\nexport default function App() {\n\n  const code = `// Go on, type some code, don't be shy.\nfunction onkeylog(line) {\n  debug('server onkeylog');\t \n  const owner = this[owner_symbol]; \n  if (owner.server)\t{\n    owner.server.emit('keylog', line, owner);\n  }\n}`\n\n  const usage_code = `import Editor from 'react-coder'\n\n<div height='500px' width='80%'>\n  <Editor \n    fontSize={12} \n    onCodeChange={onCodeChange} \n    language={\"jsx\"} \n    readOnly={true} \n    lineNumbers={true} \n    code={usage_code} \n    copy={true} />\n</div>`\n\n  const onCodeChange = (code:string) => console.log(code)\n  return (\n    <div className=\"container\">\n      <div className=\"title\"><h1>react-coder</h1></div>\n      <div className=\"logo\"><img src=\"https://i.imgur.com/ztTYPJI.png\" height=\"200px\" alt=\"react coder's logo\"/></div>\n      <div className=\"description\">\n        <p>a code wrapper & editor component for react</p>\n      </div>\n      <div className=\"usage\">\n        <h2>Install</h2>\n        <div style={{width: \"300px\", height: \"42px\"}}>\n          <Editor fontSize={12} language={\"bash\"} lineNumbers={false}  code={`npm i react-coder`} readOnly={true} copy={true} />\n        </div>\n        <b>or</b>\n        <div style={{width: \"300px\", height: \"42px\"}}>\n          <Editor fontSize={12} language={\"bash\"} lineNumbers={false}  code={`yarn add react-coder`} readOnly={true} copy={true} />\n        </div>\n      </div>\n      \n      <div className=\"usage\">\n        <h2>Usage</h2>\n        <p>Import the Editor from 'react-coder' and using it.</p>\n\n        <h3>Code Wrapper Mode (read only)</h3>\n        <div style={{width: \"420px\", height: \"240px\"}} >\n          <Editor fontSize={12} onCodeChange={onCodeChange} language={\"jsx\"} readOnly={true} lineNumbers={true} code={usage_code} copy={true} />\n        </div>\n\n        <h3>Code Editor Mode (read & write)</h3>\n        <div style={{width: \"420px\", height: \"182px\"}} >\n          <Editor fontSize={12} onCodeChange={onCodeChange} language={\"jsx\"} readOnly={false} lineNumbers={true} code={code} copy={true} />\n        </div>\n\n        <h4>NOTE: </h4>\n        <p>The height & width of the Editor equals the height & width of the div wrapping it </p>\n      </div>\n\n      <div className=\"props\">\n        <h2>Available Props</h2>\n\n        <div className=\"prop\">\n          <h4>fontSize</h4>\n          <p className=\"description\">The size of the font, default: 13px</p>\n          <p><span className=\"title\">Options:</span> <span className=\"option\">css font-size</span></p>\n        </div>\n\n        <div className=\"prop\">\n          <h4>onCodeChange</h4>\n          <p className=\"description\">A code change handler.</p>\n          <p><span className=\"title\">Options:</span> <span className=\"option\">onCodeChange(code: string)</span></p>\n        </div>\n\n        <div className=\"prop\">\n          <h4>language</h4>\n          <p className=\"description\">Hightlight the code based on the selected langauge, default: 'js'</p>\n          <p><span className=\"title\">Options:</span> <span className=\"option\">check the supported languages here <a href=\"https://prismjs.com/index.html#supported-languages\">supported-languages</a></span></p>\n        </div>\n\n        <div className=\"prop\">\n          <h4>readOnly</h4>\n          <p className=\"description\">Edit permission. default: false</p>\n          <p><span className=\"title\">Options:</span> <span className=\"option\">true</span> or <span className=\"option\">false</span></p>\n        </div>\n\n        <div className=\"prop\">\n          <h4>lineNumbers</h4>\n          <p className=\"description\">Display or hide the line numbers. default: false</p>\n          <p><span className=\"title\">Options:</span> <span className=\"option\">true</span> or <span className=\"option\">false</span></p>\n        </div>\n\n        <div className=\"prop\">\n          <h4>copy</h4>\n          <p className=\"description\">Display or hide the copy to clipboard button. default: false</p>\n          <p><span className=\"title\">Options:</span> <span className=\"option\">true</span> or <span className=\"option\">false</span></p>\n        </div>\n\n        <div className=\"prop\">\n          <h4>code</h4>\n          <p className=\"description\">The code you want to display, or edit.</p>\n          <p><span className=\"title\">Options:</span> <span className=\"option\">some code</span> </p>\n        </div>\n      </div>\n      <div className=\"themes\">\n        <h2>Available themes</h2>\n        <p>You can find the themes on the <a href=\"https://github.com/PrismJS/prism/tree/master/themes\">prism repo</a> or in <a href=\"https://github.com/PrismJS/prism-themes\">prism-themes</a></p>\n      </div>\n\n      <div className=\"contribute\">\n        <h2>Contribution</h2>\n        <p>Feel free to raise an <a href=\"https://github.com/AM-77/react-coder/issues\">Issue</a> or submit a <a href=\"https://github.com/AM-77/react-coder/pulls\">PR</a>.</p>\n      </div>\n    </div>\n  )\n}\n\n\n\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}